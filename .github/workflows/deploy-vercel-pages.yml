name: Deploy vercel/backlink folders to Vercel

on:
  push:
    branches: [ main ]
    paths:
      - 'vercel/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_TEAM_SLUG: ${{ secrets.VERCEL_TEAM_SLUG }} # optional; omit if personal

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Find backlink folders (must contain index.html)
        id: discover
        shell: bash
        run: |
          set -e
          mapfile -t DIRS < <(find vercel -mindepth 1 -maxdepth 1 -type d | sort)
          FILTERED=()
          for d in "${DIRS[@]}"; do
            [ -f "$d/index.html" ] && FILTERED+=("$d")
          done

          if [ ${#FILTERED[@]} -eq 0 ]; then
            echo "No backlink folders with index.html under vercel/."
            echo "count=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Join with newlines and set as a multi-line output
          {
            echo "dirs<<EOF"
            printf "%s\n" "${FILTERED[@]}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          echo "count=${#FILTERED[@]}" >> "$GITHUB_OUTPUT"

      - name: Deploy each folder
        if: steps.discover.outputs.count != '0'
        shell: bash
        env:
          DIRS: ${{ steps.discover.outputs.dirs }}
        run: |
          set -e
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "❌ Missing VERCEL_TOKEN secret"; exit 1
          fi

          while IFS= read -r dir; do
            [ -z "$dir" ] && continue
            PROJECT="$(basename "$dir")"
            echo "==> Deploying: $dir  (project: $PROJECT)"

            # Ensure a clean link per folder
            rm -rf "$dir/.vercel"

            # Link the folder to a Vercel project (creates the project if needed)
            if [ -n "$VERCEL_TEAM_SLUG" ]; then
              vercel link --cwd "$dir" --project "$PROJECT" --yes \
                --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"
            else
              vercel link --cwd "$dir" --project "$PROJECT" --yes \
                --token "$VERCEL_TOKEN"
            fi

            # Deploy static content
            if [ -n "$VERCEL_TEAM_SLUG" ]; then
              vercel deploy --cwd "$dir" --prod --yes \
                --token "$VERCEL_TOKEN" --scope "$VERCEL_TEAM_SLUG"
            else
              vercel deploy --cwd "$dir" --prod --yes \
                --token "$VERCEL_TOKEN"
            fi

            echo "✅ Deployed $PROJECT"
          done <<< "$DIRS"
