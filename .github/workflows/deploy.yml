name: Deploy one subfolder to Cloudflare Pages

on:
  workflow_dispatch:
    inputs:
      project:        # Full Pages project name you want (e.g. dyln-my-backlink)
        description: "Cloudflare Pages project name"
        required: true
        type: string
      dir:            # Relative folder that contains index.html (e.g. cloudflare/my-backlink)
        description: "Directory to deploy"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CF_PROJECT: ${{ inputs.project }}
      CF_DIR: ${{ inputs.dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Install wrangler
        run: npm i -g wrangler

      - name: Ensure Pages project exists
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          set -e
          if ! wrangler pages project list | grep -E "^\s*${CF_PROJECT}\b" >/dev/null 2>&1; then
            echo "Creating Pages project ${CF_PROJECT}â€¦"
            wrangler pages project create "${CF_PROJECT}" --production-branch=main
          else
            echo "Pages project ${CF_PROJECT} already exists."
          fi

      - name: Normalize index filename
        run: |
          set -e
          if [ -f "${CF_DIR}/Index.html" ] && [ ! -f "${CF_DIR}/index.html" ]; then
            mv "${CF_DIR}/Index.html" "${CF_DIR}/index.html"
          fi

      - name: Deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          set -e
          wrangler pages deploy "${CF_DIR}" \
            --project-name="${CF_PROJECT}" \
            --branch=main
